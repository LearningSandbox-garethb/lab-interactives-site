{
  "title": "Direction and Strength of Force in Electric Fields",
  "publicationStatus": "public",
  "subtitle": "Explore the force between charged objects.",
  "aspectRatio": 1.6,
  "about": [
    "One way to represent an electric field is through a map of vectors that show ",
    "the force felt by a positive charge in that field. Force ",
    "is shown by the length of the vector or its color intensity. Try making your ",
    "own mapping of the electric field by tracing force vectors."
  ],
 "models": [
    {
      "type": "md2d",
      "id": "forceDirection",
      "url": "models/lab-version/1/md2d/interactions/forceDirection.json",
      "importedFrom": "imports/legacy-mw-content/interactions/force-direction/forceDirection$0.mml",
      "viewOptions": {
        "controlButtons": "reset"
      },
      "onLoad": [
          "function updateVectors() {",
          "  batch(function() {",
          "    var dragAtomProps   = getAtomProperties(0);",
          "    var targetAtomProps = getAtomProperties(1);",
          "    var charge = get('object-charge');",
          "    var dx = dragAtomProps.x - targetAtomProps.x;",
          "    var dy = dragAtomProps.y - targetAtomProps.y;",
          "    var angle = rad2deg * Math.atan2(dy, dx);",
          "    var fieldDirectionAtTestCharge = charge > 0 ? angle : angle + 180",
          "    var eV_per_nm = 1.439 / (dx*dx + dy*dy);",
          "    // note the official electric field view uses a factor of 0.3, but 0.4 looked better here",
          "    var opacity = Math.min(1, Math.pow(eV_per_nm, 0.4) * 0.4);",
          "    var d;",
          "    setImageProperties(0, { rotation: fieldDirectionAtTestCharge, opacity: opacity } );",
          "    setImageProperties(1, { rotation: fieldDirectionAtTestCharge + 180, opacity: opacity } );",
          "    if ( get('trace-force-vectors') ) {",
          "      var tNow = getCurrentComputerTime();",
          "      if ( tNow - get('last-trace-time') > 250 ) {",
          "        var traceidx = get('trace-idx');",
          "        d = Math.sqrt(dx*dx + dy*dy);",
          "        setImageProperties(2 + traceidx, { ",
          "          imageX: dragAtomProps.x - 0.25,",
          "          imageY: dragAtomProps.y + 0.05,",
          "          rotation: fieldDirectionAtTestCharge,",
          "          opacity: opacity,",
          "          visible: true",
          "        });",
          "        set('trace-idx', (traceidx+1) % 50);",
          "        set('last-trace-time', tNow);",
          "      }",
          "    }",
          "  });",
          "};",
          "onDrag('atom', function(x, y, d, i) {",
          "  if (getNumberOfTextBoxes() > 0) { ",
          "    removeTextBox(0);",
          "  }",
          "  if (i === 0) {",
          "    updateVectors();",
          "  }",
          "});",
          "onPropertyChange('object-charge', updateVectors);",
          "updateVectors();"
        ]
    }
 ],
  "parameters": [
    {
      "name": "last-trace-time",
      "initialValue": 0,
      "onChange": []
    },
    {
      "name": "trace-idx",
      "initialValue": 0,
      "onChange": []
    },
    {
      "name": "show-force-on-object",
      "initialValue": true,
      "onChange": "setImageProperties(0, { visible: value });"
    },
    {
      "name": "show-force-on-VDG",
      "initialValue": false,
      "onChange": "setImageProperties(1, { visible: value });"
    },
    {
      "name": "trace-force-vectors",
      "initialValue": false,
      "onChange": []
    },
    {
      "name": "object-charge",
      "initialValue": 1,
      "onChange": [
        "batch(function() { ",
        "  for (var i = 2; i < 52; i++) {",
        "    setImageProperties(i, { visible: false });",
        "  }",
        "});",
        "setAtomProperties(1, { charge: value });"
      ]
    }
  ],
  "components": [
    {
      "type": "button",
      "id": "clear-trace",
      "text": "Clear",
      "action": [
        "batch(function() { ",
        "  for (var i = 2; i < 52; i++) {",
        "    setImageProperties(i, { visible: false });",
        "  }",
        "});"
      ]
    },
    {
      "type": "checkbox",
      "id": "toggle-show-force-on-object",
      "property": "show-force-on-object",
      "text": "Show force on draggable object"
    },
    {
      "type": "checkbox",
      "id": "toggle-show-force-on-VDG",
      "property": "show-force-on-VDG",
      "text": "Show force on stationary object"
    },
    {
      "type": "checkbox",
      "id": "toggle-trace-force-vectors",
      "property": "trace-force-vectors",
      "text": "Trace force vectors"
    },
    {
      "type": "text",
      "id": "label-forces",
      "text": "**Forces:**"
    },
    {
      "type": "text",
      "id": "label-tracing",
      "text": "**Tracing:**"
    },
    {
      "type": "text",
      "id": "label-direction",
      "text": "**Set charge on stationary object:**"
    },
    {
      "type": "radio",
      "id": "select-charge",
      "property": "object-charge",
      "options": [
        {
          "text": "Positive",
          "value": 1
        },
        {
          "text": "Negative",
          "value": -1
        }
      ]
    }
  ],
  "layout": {
    "right": [
      ["label-forces"],
      ["toggle-show-force-on-object"],
      ["toggle-show-force-on-VDG"],
      ["label-tracing"],
      ["toggle-trace-force-vectors"],
      ["clear-trace"],
      ["label-direction"],
      ["select-charge"]
    ]
  },
  "template": "wide-right"
}