{
  "title": "crookesElectrodes",
  "publicationStatus": "draft",
  "subtitle": "",
  "about": "",
  "models": [
    {
      "type": "md2d",
      "id": "crookesElectrodes$0",
      "url": "models-converted/lab-version/1/interactions/basic-crookes-tube/crookesElectrodes$0.json",
      "importedFrom": "imports/legacy-mw-content/interactions/basic-crookes-tube/crookesElectrodes$0.mml",
      "viewOptions": {
        "controlButtons": "",
        "imageMapping": {
          "goldLeft.png": "goldLeft.svg",
          "goldOff.png":  "goldOff.svg",
          "goldOn1.png":  "goldOn1.svg",
          "goldOn2.png":  "goldOn2.svg",
          "silverLeft.png": "silverLeft.svg",
          "silverOff.png":  "silverOff.svg",
          "siverOn1.png":  "silverOn1.svg",
          "silverOn2.png":  "silverOn2.svg",
          "ironLeft.png": "ironLeft.svg",
          "ironOff.png":  "ironOff.svg",
          "ironOn1.png":  "ironOn1.svg",
          "ironOn2.png":  "ironOn2.svg",
          "beamStraight.png": "beamStraight.svg"
        }
      },
      "onLoad": [
        "var radius = getElementProperties(0).radius,",
        "    xMax = getShapeProperties(0).x + getShapeProperties(0).width - 2*radius,",
        "    yMin = getShapeProperties(0).y + 2*radius,",
        "    yMax = yMin + getShapeProperties(0).height - 2*radius,",
        "    plateYMin = getShapeProperties(0).y + 0.2,",
        "    plateYRange = getShapeProperties(0).height - 0.4,",
        "    eFieldProps = getShapeProperties(1),",
        "    plateThickness = 0.2;",
        "setShapeProperties(0,{layer: 0});",
        "setImageProperties([1,5,9],{imageY: 2.875});",
        "setImageProperties([4,8,11],{imageY: 2.2, imageX: 2.007});",
        "setImageProperties([12,13,14,15,16,17,18,19,20,21,22],{imageX: 2.011});",
        "setImageProperties(22,{imageX: 2.0, imageY: 2.24});",
        "addShape({",
        "  type: 'rectangle',",
        "  x: eFieldProps.x,",
        "  y: eFieldProps.y,",
        "  width: eFieldProps.width,",
        "  height: plateThickness,",
        "  color: '#f00',",
        "  lineColor: '#aaa'",
        "});",
        "addShape({",
        "  type: 'rectangle',",
        "  x: eFieldProps.x,",
        "  y: eFieldProps.y + eFieldProps.height - plateThickness,",
        "  width: eFieldProps.width,",
        "  height: plateThickness,",
        "  color: '#00f',",
        "  lineColor: '#aaa'",
        "});",
        "setElectricFieldProperties({orientation: 'S'});",
        "onPropertyChange('time',function(time){",
        "  if (time % 200 === 0 && get('particlesVisible')) {",
        "    addAtom({",
        "      element: 0,",
        "      x: 0.5,",
        "      y: plateYMin + Math.random()*plateYRange,",
        "      vx: 0.001,",
        "      vy: 0,",
        "      charge: 0",
        "    });",
        "  }",
        "  batch(function(){",
        "    var i, props;",
        "    i = getNumberOfAtoms();",
        "    while(--i >= 0) {",
        "      props = getAtomProperties(i);",
        "      // within plates, skip it",
        "      if (props.x < 2) continue;",
        "      // absorbed by plate, remove it",
        "      if (props.x < 2.5 && (props.y > 2.125 || props.y < 2.025)) {",
        "        removeAtom(i);",
        "        continue;",
        "      }",
        "      // made it through plate but no longer inside, remove it",
        "      if (props.x > xMax || props.y < yMin || props.y > yMax) {",
        "        removeAtom(i);",
        "        continue;",
        "      }",
        "      // made it through plate, apply negative charge if needed",
        "      if (props.charge === 0) setAtomProperties(i, {charge: -0.01});",
        "    }",
        "  });",
        "});",
        "set('plateChargeProxy',3);"
      ]
    }
  ],
  "parameters": [
    {
      "name": "batteryEnabled",
      "initialValue": false,
      "onChange": [
        "var turnOn,",
        "    turnOff = [0,1,2,3,4,5,6,7,8,9,10,11],",
        "    beamImage;",
        "batch(function(){",
        "  setImageProperties(turnOff,{visible: false});",
        "  switch(get('electrode')) {",
        "  case 'gold':",
        "    turnOn = value ? [1, 3, 4] : [1, 2];",
        "    break;",
        "  case 'iron':",
        "    turnOn = value ? [5, 7, 8] : [5, 6];",
        "    break;",
        "  case 'silver':",
        "  default:",
        "    turnOn = value ? [9, 0, 11] : [9, 10];",
        "    break;",
        "  }",
        "  setImageProperties(turnOn,{visible: true});",
        "  beamImage = get('curBeamImage');",
        "  set('curBeamImage',[]);",
        "  set('curBeamImage',beamImage);",
        "  // make sure we are (start) or aren't (stop) generating particles",
        "  if (isStopped() && get('particlesVisible')) start();",
        "  else if (!isStopped() && !value) stop();",
        "});"
      ]
    },
    {
      "name": "curBeamImage",
      "initialValue": 22,
      "onChange": [
        "var beamImages = [12,13,14,15,16,17,18,19,20,21,22];",
        "setImageProperties(beamImages,{visible: false});",
        "if(get('batteryEnabled')) {",
        "  setImageProperties(value,{visible: true});",
        "}"
      ]
    },
    {
      "name": "particlesVisible",
      "initialValue": false,
      "onChange": [
      "  if (value) {",
      "    if (get('batteryEnabled')) {",
      "      start();",
      "    } else {",
      "      alert('Connect to high voltage to generate particles');",
      "    }",
      "  }",
      "  else {",
      "    stop();",
      "    batch(function(){",
      "      var i = getNumberOfAtoms();",
      "      while(--i >= 0) {",
      "        removeAtom(i);",
      "      }",
      "    });",
      "  }"
      ]
    },
    {
      "name": "electrode",
      "initialValue": "silver",
      "onChange": [
        "//HACK trigger update of display re-using logic in batteryEnabled",
        "batch(function(){",
        "  set('batteryEnabled',!get('batteryEnabled'));",
        "  set('batteryEnabled',!get('batteryEnabled'));",
        "});"
      ]
    },
    {
      "name": "plateChargeProxy",
      "initialValue": 3,
      "onChange": [
        "var mag = Math.abs(value),",
        "    magScaled = mag * 1.75 / 10000,",
        "    s = 192-Math.round((mag/10.0)*128),",
        "    x = 192,",
        "    blue = 'rgb(' + s + ',' + s + ',' + x + ')',",
        "    red  = 'rgb(' + x + ',' + s + ',' + s + ')',",
        "    white = 'rgb(192,192,192)',",
        "    shapePropsTop    = getShapeProperties(3),",
        "    shapePropsBottom = getShapeProperties(2),",
        "    beamImage = {",
        "      '-5': 16,",
        "      '-4': 15,",
        "      '-3': 14,",
        "      '-2': 13,",
        "      '-1': 12,",
        "      '0': 22,",
        "      '1': 17,",
        "      '2': 18,",
        "      '3': 19,",
        "      '4': 20,",
        "      '5': 21",
        "    };",
        "if (!shapePropsTop.type) return;",
        "batch(function(){",
        "  set('curBeamImage',beamImage[value]);",
        "  if (value < 0) {",
        "    setImageProperties(23,{visible: true, imageY: shapePropsTop.y + shapePropsTop.height - 0.02, imageX: shapePropsTop.x + 0.05});",
        "    setImageProperties(24,{visible: true, imageY: shapePropsBottom.y + shapePropsBottom.height - 0.02, imageX: shapePropsBottom.x + 0.05});",
        "    setShapeProperties(2,{color: blue});",
        "    setShapeProperties(3,{color: red});",
        "    setElectricFieldProperties(0,{intensity: magScaled, orientation: 'N'});",
        "  } else if (value > 0) {",
        "    setImageProperties(24,{visible: true, imageY: shapePropsTop.y + shapePropsTop.height - 0.02, imageX: shapePropsTop.x + 0.05});",
        "    setImageProperties(23,{visible: true, imageY: shapePropsBottom.y + shapePropsBottom.height - 0.02, imageX: shapePropsBottom.x + 0.05});",
        "    setShapeProperties(2,{color: red});",
        "    setShapeProperties(3,{color: blue});",
        "    setElectricFieldProperties(0,{intensity: magScaled, orientation: 'S'});",
        "  } else {",
        "    setImageProperties(24,{visible: false});",
        "    setImageProperties(23,{visible: false});",
        "    setShapeProperties(2,{color: white});",
        "    setShapeProperties(3,{color: white});",
        "    setElectricFieldProperties(0,{intensity: magScaled, orientation: 'N'});",
        "  }",
        "});"
      ]
    }
  ],
  "components": [
    {
      "id": "enable-battery",
      "type": "checkbox",
      "text": "TURN ON by connecting high voltage to electrodes",
      "property": "batteryEnabled"
    },
    {
      "id": "show-particles",
      "type": "checkbox",
      "text": "See particles making up the beam",
      "property": "particlesVisible"
    },
    {
      "id": "select-electrode",
      "type": "pulldown",
      "label": "Select electrode metal:",
      "property": "electrode",
      "options": [
        {
          "text": "silver",
          "value": "silver"
        },
        {
          "text": "gold",
          "value": "gold"
        },
        {
          "text": "iron",
          "value": "iron"
        }
      ]
    },
    {
      "type": "slider",
      "id": "set-charge-on-plates",
      "min": -5,
      "max": 5,
      "steps": 10,
      "width": "60%",
      "labels": [
        {
          "value": -5,
          "label": "Very high +/-"
        },
        {
          "value": 5,
          "label": "Very high -/+"
        },
        {
          "value": 0,
          "label": "None"
        }
      ],
      "title": "Adjust charge on horizontal plates",
      "property": "plateChargeProxy"
    }
  ],
  "layout": {
    "bottom": [
      ["enable-battery", "show-particles"],
      ["select-electrode", "set-charge-on-plates"]
    ]
  }
}
