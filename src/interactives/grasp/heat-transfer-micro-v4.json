{
  "title": "Heat Transfer Micro V4",
  "publicationStatus": "draft",
  "subtitle": "GRASP",
  "about": "",
  "aspectRatio": 1.6,
  "fontScale": 0.75,
  "models": [
    {
      "type": "md2d",
      "id": "vacuum",
      "url": "models/lab-version/1/md2d/grasp/heat-transfer-micro/model-v4.json",
      "viewOptions": {
        "controlButtons": "play_reset",
        "atomRadiusScale": 1.02
      },
      "onLoad": [
        "onClick('atom', function(x, y, atom) {",
        "  markAtoms([atom.idx]);",
        "});",
        "",
        "var DIST_THRESHOLD = 0.148;",
        "var INTERVAL = get('timeStep') * get('timeStepsPerTick') * 2;",
        "var FADE_SPEED = 0.03333;",
        "var POINT_SIZE = 0.03;",
        "var alpha = [];",
        "var coords = [];",
        "var atom = [];",
        "var prevAtomCoords = [];",
        "",
        "function dist(a1, a2) {",
        "  var x = a1.x - a2.x; var y = a1.y - a2.y;",
        "  return Math.sqrt(x * x + y * y);",
        "}",
        "function middle(a1, a2, ratio) {",
        "  return {x: a1.x + (a2.x - a1.x) * ratio - POINT_SIZE * 0.5, y: a1.y + (a2.y - a1.y) * ratio - POINT_SIZE * 0.5};",
        "}",
        "function color(alpha) {",
        "  return 'rgba(255, 16, 16, ' + alpha + ')';",
        "}",
        "function addPoint(coords) {",
        "  addShape({",
        "    type: 'ellipse',",
        "    x: coords.x,",
        "    y: coords.y,",
        "    width: POINT_SIZE,",
        "    height: POINT_SIZE,",
        "    color: color(1),",
        "    lineColor: 'transparent',",
        "    layer: 1",
        "  });",
        "}",
        "function addPoints() {",
        "  for (var i = 0, len = getNumberOfAtoms(); i < len; i++) {",
        "    for (var j = i + 1; j < len; j++) {",
        "      var a1 = getAtomProperties(i);",
        "      var a2 = getAtomProperties(j);",
        "      if (dist(a1, a2) < DIST_THRESHOLD) {",
        "        var c1 = middle(a1, a2, 0.45);",
        "        addPoint(c1);",
        "        coords.push(c1);",
        "        alpha.push(1);",
        "        atom.push(i);",
        "        prevAtomCoords.push(a1);",
        "        var c2 = middle(a1, a2, 0.55);",
        "        addPoint(c2);",
        "        coords.push(c2);",
        "        alpha.push(1);",
        "        atom.push(j);",
        "        prevAtomCoords.push(a2);",
        "      }",
        "    }",
        "  }",
        "}",
        "function update() {",
        "  for (var i = 0, len = getNumberOfShapes(); i < len; i++) {",
        "    alpha[i] -= FADE_SPEED * INTERVAL;",
        "    var a = getAtomProperties(atom[i]);",
        "    coords[i].x += a.x - prevAtomCoords[i].x;",
        "    coords[i].y += a.y - prevAtomCoords[i].y;",
        "    prevAtomCoords[i] = a;",
        "    if (alpha[i] > 0) {",
        "      setShapeProperties(i, {color: color(alpha[i]), x: coords[i].x, y: coords[i].y});",
        "    }",
        "  }",
        "}",
        "function rmInvisiblePoints() {",
        "  while (alpha[0] <= 0) {",
        "    alpha.shift();",
        "    coords.shift();",
        "    atom.shift();",
        "    prevAtomCoords.shift();",
        "    removeShape(0);",
        "  }",
        "}",
        "",
        "callEvery(INTERVAL, function () {",
        "  batch(function () {",
        "    addPoints();",
        "    update();",
        "    rmInvisiblePoints();",
        "  });",
        "});"
      ]
    }
  ],
  "components": [
    {
      "type": "checkbox",
      "id": "ke-shading",
      "text": "KE Shading",
      "property": "keShading"
    },
    {
      "type": "button",
      "id": "add-ke",
      "text": "+",
      "action": [
        "addKEToAtoms(1, [0]);"
      ]
    },
    {
      "type": "button",
      "id": "rm-ke",
      "text": "-",
      "action": [
        "setAtomProperties(0, {vx: 0, vy: 0});"
      ]
    }
  ]
}
